{"version":3,"sources":["api/auth.js","contexts/AuthContext.jsx","pages/HomePage.jsx","components/common/auth.styled.js","assets/images/ac-logo.svg","assets/images/check-active.svg","assets/images/check-circle.svg","assets/images/check-hover.svg","components/AuthInput.jsx","components/Header.jsx","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoCollection.jsx","components/Footer.jsx","pages/LoginPage.jsx","pages/SignUpPage.jsx","api/todos.js","pages/TodoPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["authURL","defaultAuthContext","isAuthenticated","currentMember","register","login","logout","AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","setIsAuthenticated","useState","payload","setPayload","pathname","useLocation","useEffect","async","authToken","localStorage","getItem","result","axios","get","concat","headers","Authorization","data","success","err","console","error","checkPermission","temPayload","jwt","checkTokenIsValid","_jsx","Provider","value","id","sub","name","username","password","post","email","tempPayload","setItem","_ref2","log","removeItem","HomePage","navigate","useNavigate","StyedContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledAuthInputContainer","_templateObject2","StyledButton","button","_templateObject3","StyledLinkText","_templateObject4","_path","_path2","_path3","_path4","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgAcLogo","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","fillRule","clipRule","d","ForwardRef","StyledContainer","StyledLabel","label","StyledInput","input","AuthInput","type","placeholder","onChange","_jsxs","e","StyledHeader","header","StyledGreetingText","Header","StyledAddTodoContainer","StyledLabelIcon","StyledInputContainer","StyledAddTodoActionContainer","TodoInput","inputValue","onKeyDone","onAddTodo","className","clsx","active","htmlFor","onKeyDown","onClick","StyledTaskItem","CheckActiveIcon","CheckCircleIcon","CheckHoverIcon","TodoItem","todo","onToggleDone","onSave","onDelete","onChangeMode","inputRef","useRef","done","isDone","edit","isEdit","onDoubleClick","current","defaultValue","TodoCollection","todos","map","_ref3","StyledFooter","footer","Footer","remainingItems","handleClick","LoginPage","setUsername","setPassword","AuthContainer","ACLogoIcon","AuthInputContainer","nameInputValue","passwordInputValue","AuthButton","Swal","fire","icon","showConfirmButton","timer","position","showCancelButton","Link","to","AuthLinkText","SignUpPage","setEmail","usernameInputValue","emailInputValue","baseUrl","axiosInstance","create","baseURL","interceptors","request","use","config","token","createTodo","patchTodo","patch","TodoPage","setInputValue","setTodos","setRemainingItems","updateRemainingItems","newTodos","getTodos","getTodosAsync","prevTodos","updatedTodos","currentTodo","find","delete","deleteTodo","filter","App","BrowserRouter","basename","process","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.bb853557.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst authURL = 'https://todo-list.alphacamp.io/api/auth';\n//註冊 --> 會代入兩個參數\n\n//帶著username , password 發出新增請求 --> 回傳data內是否有authToken\n//-->有就添加success:true屬性\nexport const register = async ({ username, password }) => {\n  //發送新增data請求 屬性username,password\n  //回傳res,解構出data\n  try {\n    const { data } = await axios.post(`${authURL}/signUp`, {\n      username,\n      password,\n    });\n    // 從data解構出authToken\n    const { authToken } = data;\n    //true --> 新增success:true至data\n    if (authToken) {\n      return { ...data, success: true };\n    }\n    //不對data做更動\n    return data;\n  } catch (err) {\n    console.error('[Register failed]', err);\n  }\n};\n\n//登入 --> 會代入兩個參數\nexport const login = async ({ username, password }) => {\n  try {\n    //發送新增data的請求 屬性為username password\n    //回傳res,解構出data\n    const { data } = await axios.post(`${authURL}/login`, {\n      username,\n      password,\n    });\n    console.log(data);\n\n    //從data解構出authToken\n    const { authToken } = data;\n    if (authToken) {\n      return { ...data, success: true };\n    }\n\n    return data;\n  } catch (err) {\n    console.error('[Login failed]', err);\n  }\n};\n\n//檢查權限 --> 取得Authorization\nexport const checkPermission = async (authToken) => {\n  try {\n    // 發送請求至後端, 請求獲得headers內Authorization數據;\n    const response = await axios.get(`${authURL}/test-token`, {\n      headers: {\n        //字串 'Bearer ' 需要手動保留一個空格\n        Authorization: 'Bearer ' + authToken,\n      },\n    });\n    //回傳response.data的success\n    return response.data.success;\n  } catch (err) {\n    console.error('[Check Permission failed]:', err);\n  }\n};\n","import { useState, createContext, useEffect, useContext } from 'react';\nimport { login, register, checkPermission } from '../api/auth';\nimport * as jwt from 'jsonwebtoken';\nimport { useLocation } from 'react-router-dom';\n\n//定義想共享的狀態與方法;\nconst defaultAuthContext = {\n  isAuthenticated: false, // 使用者是否登入的判斷依據，預設為 false，若取得後端的有效憑證，則切換為 true\n  currentMember: null, // 當前使用者相關資料，預設為 null，成功登入後就會有使用者資料\n  register: null, // 註冊方法\n  login: null, // 登入方法\n  logout: null, // 登入方法\n};\n\n//建立context\nconst AuthContext = createContext(defaultAuthContext);\n//創建自定義的 useAuth Hook，不需要每次都使用 useContext(AuthContext)，\n//而是可以直接使用 useAuth()\nexport const useAuth = () => useContext(AuthContext);\n//用來管理狀態, 封裝會影響身分狀態的方法\nexport const AuthProvider = ({ children }) => {\n  //設定狀態 --> props給Provider\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [payload, setPayload] = useState(null);\n  const { pathname } = useLocation();\n\n  //每當pathname變動,就執行checkTokenIsValid\n  useEffect(() => {\n    const checkTokenIsValid = async () => {\n      //檢查localStorage是否有authToken\n      const authToken = localStorage.getItem('authToken');\n      //authToken不存在\n      if (!authToken) {\n        setIsAuthenticated(false);\n        setPayload(null);\n        return;\n      }\n      //若autoToken存在 代入checkPermission --> success? 檢查是否有效\n      const result = await checkPermission(authToken);\n      //success true --> 更改狀態 已驗證,authToken\n      if (result) {\n        setIsAuthenticated(true);\n        //解碼authToken\n        const temPayload = jwt.decode(authToken);\n        //破解後的data --> 憑證更新\n        setPayload(temPayload);\n      } else {\n        //success false --> 更改狀態 未驗證,null\n        setIsAuthenticated(false);\n        setPayload(null);\n      }\n    };\n    checkTokenIsValid();\n    //每當pathname變動,就執行checkTokenIsValid\n  }, [pathname]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        //有可能是null --> payload true 則\n        currentMember: payload && {\n          id: payload.sub,\n          name: payload.name,\n        },\n\n        register: async (data) => {\n          //發送新增data請求給register,\n          //並解構回傳的data 取得 success & authToken\n          const { success, authToken } = await register({\n            username: data.username,\n            email: data.email,\n            password: data.password,\n          });\n          //解碼還原取得的authToken --> 需安裝jsonwebtoken套件\n          const tempPayload = jwt.decode(authToken);\n          //解碼成功 --> 更新到payload,已驗證true,auth存入localStorage\n          if (tempPayload) {\n            setPayload(tempPayload);\n            setIsAuthenticated(true);\n            localStorage.setItem('authToken', authToken);\n          } else {\n            //解碼失敗 --> payload(null),已驗正false\n            setPayload(null);\n            setIsAuthenticated(false);\n          }\n          //回傳註冊success結果(由register取得)\n          return success;\n        },\n\n        //除了代入login的參數不用email,其他同register\n        login: async (data) => {\n          const { success, authToken } = await login({\n            username: data.username,\n            password: data.password,\n          });\n          //解碼還原取得的authToken --> 需安裝jsonwebtoken套件\n          const tempPayload = jwt.decode(authToken);\n          //解碼成功 --> 更新到payload,已驗證true,auth存入localStorage\n          if (tempPayload) {\n            setPayload(tempPayload);\n            setIsAuthenticated(true);\n            localStorage.setItem('authToken', authToken);\n          } else {\n            //解碼失敗 --> payload(null),已驗正false\n            setPayload(null);\n            setIsAuthenticated(false);\n          }\n          //回傳註冊success結果(由register取得)\n          return success;\n        },\n\n        //登出 --> 移除authToken\n        logout: () => {\n          localStorage.removeItem('authToken');\n          setPayload(null);\n          setIsAuthenticated(false);\n        },\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { useAuth } from 'contexts/AuthContext';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst HomePage = () => {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/todos');\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, isAuthenticated]);\n\n  return <div>HomePage</div>;\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nconst StyedContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst StyledAuthInputContainer = styled.div`\n  width: 50%;\n  margin-top: 30px;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 30px;\n  background-color: #ff6600;\n  border: none;\n\n  color: white;\n  min-width: 300px;\n  font-family: 'Noto Sans TC', sans-serif;\n  font-weight: bold;\n  padding: 6px 0;\n  margin: 2rem 0;\n\n  &.hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledLinkText = styled.div`\n  color: #0062ff;\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nexport {\n  StyedContainer as AuthContainer,\n  StyledAuthInputContainer as AuthInputContainer,\n  StyledButton as AuthButton,\n  StyledLinkText as AuthLinkText,\n};\n","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAcLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M25.6996 18.4709C25.6996 18.4709 18.2328 30.5781 12.1109 30.5781C1.40314 30.5781 11.3821 7.51318 19.1916 7.51318C24.641 7.51318 25.6996 18.4709 25.6996 18.4709Z\",\n    fill: \"#FF6600\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M34.5723 33.6972C32.4451 35.9607 29.8198 37.6976 26.9044 38.7701C23.989 39.8426 20.8639 40.2213 17.7767 39.8761C14.6895 39.5309 11.7252 38.4713 9.11881 36.7813C6.51245 35.0914 4.33573 32.8175 2.76123 30.1401C4.5314 32.5477 7.53375 34.1527 11.803 34.1527C22.3199 34.1527 28.2899 25.98 28.2899 25.98C28.2899 25.98 28.8062 32.4392 34.5593 33.6972H34.5723Z\",\n    fill: \"#FF6600\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M37.7223 10.7451C39.2963 13.7527 40.0781 17.1116 39.9939 20.505C39.9096 23.8984 38.9621 27.2144 37.2407 30.1401C35.8792 29.3764 34.8725 28.1082 34.4379 26.609L32.1558 19.7724L37.7223 10.7451Z\",\n    fill: \"#FF6600\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M20.0031 0.0173688C25.0185 0.0140335 29.8513 1.89881 33.5398 5.29665L29.7521 11.4088C28.3811 7.84302 25.5957 4.2729 20.1767 4.2729C9.07841 4.2729 0.852307 16.3888 0.852307 23.9846C0.849861 24.9669 0.975283 25.9454 1.22543 26.8953C0.115582 23.8725 -0.247948 20.6265 0.165719 17.4331C0.579385 14.2398 1.75802 11.1934 3.60147 8.55306C5.44491 5.91269 7.89866 3.75634 10.7542 2.26726C13.6097 0.778179 16.7826 0.000388507 20.0031 0V0.0173688Z\",\n    fill: \"#FF6600\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcLogo);\nexport default __webpack_public_path__ + \"static/media/ac-logo.f4e0f3cb.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/check-active.95ca055c.svg\";","export default __webpack_public_path__ + \"static/media/check-circle.30720b46.svg\";","export default __webpack_public_path__ + \"static/media/check-hover.5e00062b.svg\";","import styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  background-color: #f5f8fa;\n  width: 100%;\n  height: 54px;\n  border-bottom: 2px solid black;\n`;\nconst StyledLabel = styled.label`\n  font-size: 14;\n  color: '#696974';\n  text-align: start;\n`;\n\nconst StyledInput = styled.input`\n  outline: none;\n  border: none;\n  background-color: #f5f8fa;\n  border-radius: 0px;\n`;\n\nconst AuthInput = ({ type, label, value, placeholder, onChange }) => {\n  return (\n    <StyledContainer>\n      <StyledLabel>{label}</StyledLabel>\n      <StyledInput\n        type={type || 'text'}\n        value={value || ''} // 如果外層沒有帶入 props 就預設給一個空字串\n        placeholder={placeholder || ''} // 如果外層沒有帶入 props 就預設給一個空字串\n        onChange={(e) => onChange?.(e.target.value)}\n      />\n    </StyledContainer>\n  );\n};\n\nexport default AuthInput;\n","import styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  color: var(--major);\n  padding: 0 16px;\n\n  h3 {\n    font-weight: 400;\n    user-select: none;\n  }\n`;\n\nconst StyledGreetingText = styled.div`\n  color: var(--gray);\n  span {\n    color: var(--major);\n  }\n`;\n\nconst Header = ({ username }) => {\n  return (\n    <StyledHeader>\n      <h3>Tasks</h3>\n      <StyledGreetingText>\n        Hi <span>{username}</span>\n      </StyledGreetingText>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport clsx from 'clsx';\n\nconst StyledAddTodoContainer = styled.div`\n  min-height: 52px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  word-wrap: break-word;\n  word-break: break-word;\n  padding: 0 12px;\n  box-shadow: 0 17px 0 -16px #e5e5e5;\n  flex-wrap: wrap;\n\n  &.active {\n    box-shadow: 0 17px 0 -16px var(--major);\n  }\n`;\n\nconst StyledLabelIcon = styled.label`\n  display: inline-flex;\n  font-size: 30px;\n  transition: color 0.2s ease-out;\n  font-weight: 300;\n\n  &:after {\n    content: '+';\n  }\n`;\n\nconst StyledInputContainer = styled.div`\n  min-height: 52px;\n  display: flex;\n  align-items: center;\n  flex: 1;\n  user-select: none;\n\n  input {\n    flex: 1;\n    padding: 8px 12px;\n    border: 0;\n    outline: 0;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--major);\n      font-size: 13px;\n    }\n  }\n  $.active {\n    input::placeholder {\n      color: var(--gray);\n    }\n  }\n`;\n\nconst StyledAddTodoActionContainer = styled.div`\n  button {\n    font-size: 13px;\n    color: var(--major);\n    padding-right: 5px;\n    display: none;\n  }\n\n  &.active {\n    button {\n      display: block;\n    }\n  }\n`;\nconst TodoInput = ({ inputValue, onChange, onKeyDone, onAddTodo }) => {\n  return (\n    <StyledAddTodoContainer\n      className={clsx('', { active: inputValue.length > 0 })}\n    >\n      <StyledLabelIcon className=\"icon\" htmlFor=\"add-todo-input\" />\n      <StyledInputContainer>\n        <input\n          id=\"add-todo-input\"\n          type=\"text\"\n          placeholder=\"新增工作\"\n          value={inputValue}\n          // value為TodoPage傳遞的inputValue\n          onChange={(e) => {\n            onChange?.(e.target.value);\n          }}\n          //按Enter\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              onKeyDone?.();\n            }\n          }}\n        />\n      </StyledInputContainer>\n      <StyledAddTodoActionContainer\n        className={clsx('', { active: inputValue.length > 0 })}\n      >\n        <button className=\"btn-reset\" onClick={() => onAddTodo?.()}>\n          新增\n        </button>\n      </StyledAddTodoActionContainer>\n    </StyledAddTodoContainer>\n  );\n};\n\nexport default TodoInput;\n","import clsx from 'clsx';\nimport { useRef } from 'react';\nimport styled from 'styled-components';\nimport {\n  CheckActiveIcon,\n  CheckCircleIcon,\n  CheckHoverIcon,\n} from 'assets/images';\n\nconst StyledTaskItem = styled.div`\n  min-height: 52px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  word-wrap: break-word;\n  word-break: break-word;\n  padding: 0 12px;\n  box-shadow: 0 17px 0 -16px #e5e5e5;\n  flex-wrap: wrap;\n\n  .task-item-body-input {\n    user-select: none;\n    display: none;\n    flex: 1;\n    padding: 8px 0px;\n    border: 0;\n    outline: 0;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--gray);\n      font-size: 13px;\n    }\n  }\n\n  &:hover {\n    background: #fff3eb;\n    box-shadow: inset 0 0 0 1px #fff3eb;\n\n    .task-item-action .btn-destroy {\n      display: inline-flex;\n    }\n  }\n\n  &.done {\n    .task-item-body {\n      color: var(--gray);\n      text-decoration: line-through;\n    }\n\n    .icon-checked {\n      background-image: url(${CheckActiveIcon});\n    }\n  }\n\n  &.edit {\n    .task-item-body-input {\n      display: block;\n    }\n    .task-item-body-text {\n      display: none;\n    }\n    .task-item-action {\n      display: none;\n    }\n  }\n\n  .task-item-checked {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .task-item-body {\n    font-weight: 400;\n    padding: 8px 12px;\n    flex: 1;\n    display: flex;\n  }\n\n  .task-item-action {\n    .btn-destroy {\n      display: none;\n      font-size: 30px;\n      transition: color 0.2s ease-out;\n      font-weight: 300;\n      &:after {\n        content: '×';\n      }\n    }\n  }\n\n  .icon-checked {\n    background-image: url(${CheckCircleIcon});\n    background-position: center;\n    background-repeat: no-repeat;\n\n    &:hover {\n      transition: background-image 0.5s;\n      background-image: url(${CheckHoverIcon});\n    }\n  }\n`;\n\nconst TodoItem = ({ todo, onToggleDone, onSave, onDelete, onChangeMode }) => {\n  const inputRef = useRef(null);\n  const handleKeyDown = (e) => {\n    //input有value 且 按下Enter --> 透過onSave回傳id & title給父層\n    if (inputRef.current.value.length > 0 && e.key === 'Enter') {\n      onSave?.({ id: todo.id, title: inputRef.current.value });\n    }\n    //按下Esc --> 透過onChangeMode回傳id & isEdit給父層\n    if (e.key === 'Escape') {\n      onChangeMode?.({ id: todo.id, isEdit: false });\n    }\n  };\n  return (\n    <StyledTaskItem\n      className={clsx('', { done: todo.isDone, edit: todo.isEdit })}\n    >\n      <div className=\"task-item-checked\">\n        <span\n          className=\"icon icon-checked\"\n          // 當onClick,假如onToggleDone已定義,則傳遞todo.id\n          onClick={() => {\n            onToggleDone?.(todo.id);\n          }}\n        />\n      </div>\n      <div\n        className=\"task-item-body\"\n        onDoubleClick={() => {\n          onChangeMode?.({ id: todo.id, isEdit: true });\n        }}\n      >\n        <span className=\"task-item-body-text\">{todo.title}</span>\n        <input\n          ref={inputRef}\n          className=\"task-item-body-input\"\n          onKeyDown={handleKeyDown}\n          defaultValue={todo.title}\n        />\n      </div>\n      <div className=\"task-item-action \">\n        <button\n          className=\"btn-reset btn-destroy icon\"\n          onClick={() => {\n            onDelete?.(todo.id);\n          }}\n        ></button>\n      </div>\n    </StyledTaskItem>\n  );\n};\n\nexport default TodoItem;\n","import TodoItem from './TodoItem';\n\nconst TodoCollection = ({\n  todos,\n  onToggleDone,\n  onChangeMode,\n  onSave,\n  onDelete,\n}) => {\n  return (\n    <div>\n      {todos.map((todo) => {\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            onToggleDone={(id) => {\n              onToggleDone?.(id);\n            }}\n            onChangeMode={({ id, isEdit }) => {\n              onChangeMode?.({ id, isEdit });\n            }}\n            onSave={({ id, title }) => onSave?.({ id, title })}\n            onDelete={(id) => {\n              onDelete?.(id);\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TodoCollection;\n","import styled from 'styled-components';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst StyledFooter = styled.footer`\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  p {\n    font-size: 14px;\n    font-weight: 300;\n    margin: 2rem 0 1rem;\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding: 0;\n  border: 0;\n  background: none;\n  vertical-align: baseline;\n  appearance: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  cursor: pointer;\n  outline: 0;\n\n  font-size: 14px;\n  font-weight: 300;\n  margin: 2rem 0 1rem;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\n//接收remainingItems\nconst Footer = ({ remainingItems }) => {\n  const { logout } = useAuth();\n  const handleClick = () => {\n    logout();\n  };\n  return (\n    <StyledFooter>\n      <p>剩餘項目數： {remainingItems}</p>\n      <StyledButton onClick={handleClick}>登出</StyledButton>\n    </StyledFooter>\n  );\n};\n\nexport default Footer;\n","import {\n  AuthContainer,\n  AuthInputContainer,\n  AuthButton,\n  AuthLinkText,\n} from 'components/common/auth.styled';\n\nimport { ACLogoIcon } from 'assets/images';\nimport { AuthInput } from 'components';\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { useAuth } from 'contexts/AuthContext'; // 引用封裝好的資訊\n\n//click,呼叫login()\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const { login, isAuthenticated } = useAuth(); // 取出需要的狀態與方法\n\n  const handleClick = async () => {\n    if (username.length === 0) {\n      return;\n    }\n    if (password.length === 0) {\n      return;\n    }\n\n    //設Context後,抽換 { success, authToken } --> success\n    //只負責傳入{ username, password } 回傳值變成只有一個布林值\n    const success = await login({ username, password });\n    if (success) {\n      Swal.fire({\n        title: '登入成功',\n        icon: 'success',\n        showConfirmButton: false,\n        timer: 2000,\n        position: 'top',\n      });\n      return;\n    }\n    Swal.fire({\n      title: '登入失敗',\n      icon: 'error',\n      showCancelButton: false,\n      timer: 2000,\n      position: 'top',\n    });\n  };\n\n  //每當navigate || isAuthenticated 改變\n  //都會檢查isAuthenticated\n  //驗證成功 則 導引至/todos\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/todos');\n    }\n  }, [navigate, isAuthenticated]);\n\n  return (\n    <AuthContainer>\n      <div>\n        <ACLogoIcon />\n      </div>\n      <h1>登入 Todo</h1>\n\n      <AuthInputContainer>\n        <AuthInput\n          label=\"帳號\"\n          placeholder=\"請輸入帳號\"\n          value={username}\n          onChange={(nameInputValue) => setUsername(nameInputValue)}\n        />\n      </AuthInputContainer>\n\n      <AuthInputContainer>\n        <AuthInput\n          type=\"password\"\n          label=\"密碼\"\n          placeholder=\"請輸入密碼\"\n          value={password}\n          onChange={(passwordInputValue) => setPassword(passwordInputValue)}\n        />\n      </AuthInputContainer>\n      <AuthButton onClick={handleClick}>登入</AuthButton>\n      <Link to=\"/signUp\">\n        <AuthLinkText>註冊</AuthLinkText>\n      </Link>\n    </AuthContainer>\n  );\n};\n\nexport default LoginPage;\n","import {\n  AuthContainer,\n  AuthInputContainer,\n  AuthButton,\n  AuthLinkText,\n} from 'components/common/auth.styled';\nimport { ACLogoIcon } from 'assets/images';\nimport { AuthInput } from 'components';\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { useAuth } from 'contexts/AuthContext'; // 引用封裝好的資訊\n\nconst SignUpPage = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n  const { register, isAuthenticated } = useAuth(); // 取出需要的狀態與方法\n  const handleClick = async () => {\n    if (username.length === 0) {\n      return;\n    }\n    if (email.length === 0) {\n      return;\n    }\n    if (password.length === 0) {\n      return;\n    }\n    //發送註冊請求 期望取得success\n    const success = await register({\n      username,\n      email,\n      password,\n    });\n    //true --> authToken存入localStorage\n    if (success) {\n      //彈出提示訊息\n      Swal.fire({\n        title: '註冊成功',\n        icon: 'success',\n        showConfirmButton: false,\n        timer: 2000,\n        position: 'top',\n      });\n      return;\n    }\n    Swal.fire({\n      title: '註冊失敗',\n      icon: 'error',\n      showCancelButton: false,\n      timer: 2000,\n      position: 'top',\n    });\n  };\n\n  //每當navigate || isAuthenticated 改變\n  //都會檢查isAuthenticated\n  //驗證成功 則 導引至/todos\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/todos');\n    }\n  }, [navigate, isAuthenticated]);\n\n  return (\n    <AuthContainer>\n      <div>\n        <ACLogoIcon />\n      </div>\n      <h1>建立您的帳號</h1>\n\n      <AuthInputContainer>\n        <AuthInput\n          label=\"帳號\"\n          placeholder=\"請輸入帳號\"\n          value={username}\n          onChange={(usernameInputValue) => setUsername(usernameInputValue)}\n        />\n      </AuthInputContainer>\n\n      <AuthInputContainer>\n        <AuthInput\n          label=\"Email\"\n          placeholder=\"請輸入email\"\n          value={email}\n          onChange={(emailInputValue) => setEmail(emailInputValue)}\n        />\n      </AuthInputContainer>\n\n      <AuthInputContainer>\n        <AuthInput\n          type=\"password\"\n          label=\"密碼\"\n          placeholder=\"請輸入密碼\"\n          value={password}\n          onChange={(passwordInputValue) => setPassword(passwordInputValue)}\n        />\n      </AuthInputContainer>\n      <AuthButton onClick={handleClick}>註冊</AuthButton>\n      <Link to=\"/Login\">\n        <AuthLinkText>取消</AuthLinkText>\n      </Link>\n    </AuthContainer>\n  );\n};\n\nexport default SignUpPage;\n","import axios from 'axios';\n// baseUrl 替換成 Todo List API\nconst baseUrl = 'https://todo-list.alphacamp.io/api';\n\n//新增 axios instance；\nconst axiosInstance = axios.create({\n  baseURL: baseUrl,\n});\n\n//在 header 中加上從 Local Storage 拿的 token，如果 token 存在，就透過 config.headers 來設定 headers，並回傳 config\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error(error);\n  },\n);\n\n//根據API規定,各自發送請求 --> 獲取data\nexport const getTodos = async () => {\n  try {\n    //發送Get請求到Url,請求內容:Get Url數據\n    const res = await axiosInstance.get(`${baseUrl}/todos`);\n    return res.data.data;\n  } catch (err) {\n    console.error('Get Todos failed', err);\n  }\n};\n\nexport const createTodo = async (payload) => {\n  const { title, isDone } = payload;\n  try {\n    //發送Post請求到Url , 請求內容:Post對象,屬性為{title,isDone}\n    const res = await axiosInstance.post(`${baseUrl}/todos`, { title, isDone });\n    return res.data;\n  } catch (err) {\n    console.error('Post Todo failed', err);\n  }\n};\n\nexport const patchTodo = async (payload) => {\n  const { id, title, isDone } = payload;\n  try {\n    //發送Patch請求到Url+{id} , 請求內容:Patch對象{id},屬性{title,isDone}\n    const res = await axiosInstance.patch(`${baseUrl}/todos/${id}`, {\n      title,\n      isDone,\n    });\n    return res.data;\n  } catch (err) {\n    console.error('Patch Todos failed', err);\n  }\n};\n\nexport const deleteTodo = async (id) => {\n  try {\n    //發送Delete請求到Url+{id} , 請求內容:delete對象{id}\n    const res = await axiosInstance.delete(`${baseUrl}/todos/${id}`);\n    return res.data;\n  } catch (err) {\n    console.error('Delete Todo failed', err);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { Footer, Header, TodoCollection, TodoInput } from 'components';\nimport { getTodos, createTodo, patchTodo, deleteTodo } from '../api/todos';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from 'contexts/AuthContext'; // 引用封裝好的資訊\n\nconst TodoPage = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [remainingItems, setRemainingItems] = useState(todos.length);\n  const navigate = useNavigate();\n  const { isAuthenticated, currentMember } = useAuth(); // 取出需要的狀態與方法\n\n  //代入新的Todos --> 並將newTodos.length 設為剩餘項目數\n  const updateRemainingItems = (newTodos) => {\n    setRemainingItems(newTodos.length);\n  };\n\n  //處理onChange --> 接收回傳Value 並 更新inputValue\n  const handleChange = (value) => {\n    setInputValue(value);\n  };\n\n  //處理onAddTodo -->\n  //將inputValue 新增為Todo 並回傳newTodos && 更新剩餘項目\n  //更改為async\n  const handleAddTodo = async () => {\n    if (inputValue.length === 0) {\n      return;\n    }\n\n    try {\n      //發送create請求並修改後端data的title & isDone\n      const data = await createTodo({ title: inputValue, isDone: false });\n      //將後端修改後的data置換到前端畫面內\n      setTodos((prevTodos) => {\n        const updatedTodos = [\n          ...prevTodos,\n          {\n            id: data.id,\n            title: data.title,\n            isDone: data.isDone,\n            isEdit: false,\n          },\n        ];\n        //  更新剩餘項目數\n        updateRemainingItems(updatedTodos);\n        return updatedTodos;\n      });\n      setInputValue('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  //處理onKeyDown -->\n  //將inputValue 新增為Todo 並回傳newTodos && 更新剩餘項目\n  const handleKeyDone = async () => {\n    if (inputValue.length === 0) {\n      return;\n    }\n    try {\n      //獲取後端data,並修改data的title & isDone\n      const data = await createTodo({\n        title: inputValue,\n        isDone: false,\n      });\n      setTodos((prevTodos) => {\n        const updatedTodos = [\n          ...prevTodos,\n          {\n            //將修改後data內容,置換入各properties\n            id: data.id,\n            title: data.title,\n            isDone: data.isDone,\n            isEdit: false,\n          },\n        ];\n        //  更新剩餘項目數\n        updateRemainingItems(updatedTodos);\n        return updatedTodos;\n      });\n      setInputValue('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  //toggle isDone\n  const handleToggleDone = async (id) => {\n    //需要先確認當前id 的 isDone狀態\n    const currentTodo = todos.find((todo) => todo.id === id);\n    try {\n      //發送請求並 更改後端data的isDone 為相反值\n      await patchTodo({ id, isDone: !currentTodo.isDone });\n      //前端處理isDone\n      setTodos((prevTodos) => {\n        return prevTodos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              isDone: !todo.isDone,\n            };\n          }\n          return todo;\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  //toggle isEditMode (只是進入模式,但無法更改)\n  //回傳目標isEdit:true,其他 false\n  const handleChangeMode = ({ id, isEdit }) => {\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            isEdit,\n          };\n        }\n        // return todo;\n        return { ...todo, isEdit: false };\n      });\n    });\n  };\n\n  //處理onSave --> 修改title & isEdit\n  const handleSave = async ({ id, title }) => {\n    //不需要find --> 只要獲得當前title,更新就好\n    try {\n      //獲取patchTodo data\n      await patchTodo({ id, title });\n      setTodos((prevTodos) => {\n        return prevTodos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              title,\n              isEdit: false,\n            };\n          }\n          return todo;\n        });\n      });\n    } catch (err) {\n      console.err(err);\n    }\n  };\n  //處理onDelete -->\n  //篩選出todo.id以外的id 並回傳newTodos && 更新剩餘項目\n  const handleDelete = async (id) => {\n    try {\n      await deleteTodo(id);\n      setTodos((prevTodos) => {\n        const updatedTodos = prevTodos.filter((todo) => todo.id !== id);\n        updateRemainingItems(updatedTodos);\n        return updatedTodos;\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  //初始渲染畫面 非同步-->try, catch\n  useEffect(() => {\n    const getTodosAsync = async () => {\n      try {\n        //獲取getTodos data\n        const todos = await getTodos();\n        //setTodos data內的每筆todo\n        setTodos(\n          todos.map((todo) => {\n            return {\n              ...todo,\n              isEdit: false,\n            };\n          }),\n        );\n        //初始獲取todos後,顯示剩餘項目數\n        updateRemainingItems(todos);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getTodosAsync();\n  }, []);\n\n  //每當navigate || isAuthenticated 改變\n  //都會檢查isAuthenticated\n  //驗證失敗 則 導引回/login\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n    }\n  }, [navigate, isAuthenticated]);\n\n  return (\n    <div>\n      TodoPage\n      <Header username={currentMember?.name} />\n      <TodoInput\n        inputValue={inputValue}\n        onChange={handleChange}\n        onAddTodo={handleAddTodo}\n        onKeyDone={handleKeyDone}\n      />\n      <TodoCollection\n        todos={todos}\n        onToggleDone={handleToggleDone}\n        onChangeMode={handleChangeMode}\n        onSave={handleSave}\n        onDelete={handleDelete}\n      />\n      <Footer remainingItems={remainingItems} />\n    </div>\n  );\n};\n\nexport default TodoPage;\n","import './App.scss';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { TodoPage, LoginPage, SignUpPage, HomePage } from 'pages';\nimport { AuthProvider } from 'contexts/AuthContext';\n\nconst basename = process.env.PUBLIC_URL;\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BrowserRouter basename={basename}>\n        {/* 掛載Provider */}\n        <AuthProvider>\n          <Routes>\n            <Route path=\"login\" element={<LoginPage />}></Route>\n            <Route path=\"signUp\" element={<SignUpPage />}></Route>\n            <Route path=\"todos\" element={<TodoPage />}></Route>\n            <Route path=\"*\" element={<HomePage />}></Route>\n          </Routes>\n        </AuthProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}